generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int      @id @default(autoincrement())
  username      String   @unique
  name          String
  mail_verified Boolean @default(false)
  email         String   @unique
  password      String
  bio           String?
  avatarUrl     String?
  createdAt     DateTime @default(now())

  tweets    Tweet[]
  likes     Like[]
  followers Follower[] @relation("UserFollowers")
  following Follower[] @relation("UserFollowing")
}

model Tweet {
  id        Int      @id @default(autoincrement())
  content   String
  mediaUrl  String?
  createdAt DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId Int

  parent     Tweet?   @relation("Replies", fields: [parentId], references: [id])
  parentId   Int? 

  threadRoot Tweet?   @relation("ThreadRoot", fields: [threadRootId], references: [id])
  threadRootId Int?

  quoteOf    Tweet?   @relation("Quotes", fields: [quoteOfId], references: [id])
  quoteOfId  Int?

  replies    Tweet[]  @relation("Replies")
  thread     Tweet[]  @relation("ThreadRoot")
  quotes     Tweet[]  @relation("Quotes")

  likes Like[]
}

model Like {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  tweet     Tweet    @relation(fields: [tweetId], references: [id])
  userId    Int
  tweetId   Int
  createdAt DateTime @default(now())

  @@unique([userId, tweetId])
}

model Follower {
  id          Int      @id @default(autoincrement())
  follower    User     @relation("UserFollowing", fields: [followerId], references: [id])
  following   User     @relation("UserFollowers", fields: [followingId], references: [id])
  followerId  Int
  followingId Int
  createdAt   DateTime @default(now())

  @@unique([followerId, followingId])
}
